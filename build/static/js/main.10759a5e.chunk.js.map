{"version":3,"sources":["images/marker--berth.svg","images/marker--botany.svg","images/marker--kembla.svg","images/marker--cooks.svg","images/marker--enfield.svg","images/marker--nsw-ports.svg","images/marker--building.svg","images/marker--seaport--blue.svg","images/marker--imt.svg","images/marker--imt--blue.svg","images/marker--carpark.svg","images/marker--seaport.svg","store.js","components/Sider/LocationButtons.js","data/toggles.js","components/Sider/Switch.js","components/Sider/ActiveLayers.js","components/Sider/index.js","data/PortsData/allLocations.js","utils/popup/cluster.js","data/PublicData/seaports.js","data/PublicData/keyRoads.js","data/PublicData/keyRail.js","data/PublicData/intermodalTerminals.js","data/PublicData/secondaryRoads.js","utils/popup/content-fields.js","data/PortsData/PB_berths.js","data/PortsData/PK_berths.js","data/PortsData/tenancyLeaseAreas.js","data/PortsData/tenancyUnits.js","data/PortsData/buildings.js","data/PortsData/railNetwork.js","data/PortsData/roadNetwork.js","data/PortsData/carparks.js","data/PortsData/PK_innerHarbour.js","data/PortsData/PK_outerHarbour.js","data/viewports.js","components/Map.js","index.js"],"names":["module","exports","clearActive","nswPortsSeaports","nswPortsIntermodalTerminals","leaseBoundaries","tenancyLeaseAreas","nswPortsLeaseArea","pbBerths","pkBerths","buildings","heritage","railNetwork","roadNetwork","seaports","intermodalTerminals","keyRail","keyRoads","secondaryRoads","carparks","defaultActive","handleViewportOnUrl","window","location","pathname","handleSiderLevelOnUrl","createContainer","useState","viewing","siderLevel","basemap","Provider","useTrackedState","useSetState","useUpdate","BUTTONS","id","icon","BotanyIcon","KemblaIcon","CooksIcon","EnfieldIcon","NSWPortsIcon","LocationButtons","setState","StyledContainer","StyledContent","map","button","key","onClick","prev","src","alt","styled","div","ALL","label","iconUrl","SeaportBlueIcon","IntermodalTerminalBlueIcon","IntermodalTerminalIcon","size","color","localGov","tenancyLeaseArea","tenancyUnits","BuildingIcon","portBotanyLabel","CarparkIcon","ALL_SWITCHES","PB_SWITCHES","BerthIcon","PK_SWITCHES","CR_SWITCHES","EN_SWITCHES","SwitchComp","item","state","register","useForm","StyledSwitch","name","ref","onChange","e","handleToggle","checked","checkedIcon","uncheckedIcon","onColor","offColor","height","width","ActiveLayersForm","togglesArr","handleToggles","StyledWrapper","StyledForm","MenuBtnsWrapper","type","TogglesWrapper","v","form","Sidebar","innerWidth","innerHeight","windowDimensions","visible","setVisible","btnHovered","setBtnHovered","StyledToggle","onMouseEnter","onMouseLeave","StyledHeader","className","ButtonsWrapper","props","handleBannerImage","handleBannerIcon","symbolSettings","botanyLayer","url","objectIdField","renderer","symbol","kemblaLayer","cooksLayer","enfieldLayer","clusterConfig","clusterRadius","clusterMinSize","clusterMaxSize","labelingInfo","deconflictionStrategy","labelExpressionInfo","expression","font","weight","family","labelPlacement","seaportsLayer","popupTemplate","title","featureReduction","keyRoadsLayer","style","outline","keyRailLayer","intermodalTerminalsLayer","secondaryRoadsLayer","handlePopupContent","feature","dataObj","graphic","attributes","htmlString","Object","keys","forEach","value","PB_berthLayer","outFields","content","PK_berthsLayer","outfields","tenancyLeaseAreasLayer","tenancyUnitsLayer","buildingsLayer","railNetworkLayer","roadNetworkLayer","carparksLayer","PK_innerHabourLayer","PK_outerHabourLayer","viewports","zoom","center","PB","PK","CR","EN","Map","mapRef","useRef","useEffect","loadModules","css","then","ArcGISMap","MapView","GeoJSONLayer","BasemapToggle","view","container","current","popup","collapseEnabled","dockEnabled","defaultPopupTemplateEnabled","highlightOptions","haloOpacity","fillOpacity","navigation","mouseWheelZoomEnabled","basemapToggle","nextBasemap","on","ui","add","position","App","onload","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10759a5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/marker--berth.d812a56c.svg\";","module.exports = __webpack_public_path__ + \"static/media/marker--botany.c47ec2bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/marker--kembla.3ca74ca5.svg\";","module.exports = __webpack_public_path__ + \"static/media/marker--cooks.869b496f.svg\";","module.exports = __webpack_public_path__ + \"static/media/marker--enfield.d3393493.svg\";","module.exports = __webpack_public_path__ + \"static/media/marker--nsw-ports.3a7ab1d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/marker--building.1f42572d.svg\";","module.exports = __webpack_public_path__ + \"static/media/marker--seaport--blue.e5a570a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/marker--imt.a33058e8.svg\";","module.exports = __webpack_public_path__ + \"static/media/marker--imt--blue.54ab34d3.svg\";","module.exports = __webpack_public_path__ + \"static/media/marker--carpark.2dbde4f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/marker--seaport.f754c4e8.svg\";","import { useState } from \"react\";\nimport { createContainer } from \"react-tracked\";\n\nexport const clearActive = {\n  nswPortsSeaports: false,\n  nswPortsIntermodalTerminals: false,\n  leaseBoundaries: false,\n  tenancyLeaseAreas: false,\n  nswPortsLeaseArea: false,\n  pbBerths: false,\n  pkBerths: false,\n  buildings: false,\n  heritage: false,\n  railNetwork: false,\n  roadNetwork: false,\n  seaports: false,\n  intermodalTerminals: false,\n  keyRail: false,\n  keyRoads: false,\n  secondaryRoads: false,\n  carparks: false,\n};\n\nconst defaultActive = {\n  ...clearActive,\n  nswPortsSeaports: true,\n  nswPortsIntermodalTerminals: true,\n  nswPortsLeaseArea: true,\n};\n\n/**\n * Customise the default viewport depending on which page the user is viewing\n */\nconst handleViewportOnUrl = () => {\n  switch (window.location.pathname) {\n    case \"/port-botany\":\n      return \"PB\";\n    case \"/port-kembla\":\n      return \"PK\";\n    case \"/cooks-river-intermodal-terminal\":\n      return \"CR\";\n    case \"/enfield-intermodal-logistics-centre\":\n      return \"EN\";\n    default:\n      return \"ALL\";\n  }\n};\n\nconst handleSiderLevelOnUrl = () => {\n  switch (window.location.pathname) {\n    case \"/port-botany\":\n    case \"/port-kembla\":\n    case \"/cooks-river-intermodal-terminal\":\n    case \"/enfield-intermodal-logistics-centre\":\n      return 2;\n    default:\n      return 1;\n  }\n};\n\nconst useValue = () =>\n  useState({\n    viewing: handleViewportOnUrl(),\n    siderLevel: handleSiderLevelOnUrl(),\n    basemap: \"gray\",\n    ...defaultActive,\n  });\n\nexport const { Provider, useTrackedState, useUpdate: useSetState } = createContainer(useValue);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { useSetState } from \"../../store\";\n\nimport BotanyIcon from \"../../images/marker--botany.svg\";\nimport KemblaIcon from \"../../images/marker--kembla.svg\";\nimport CooksIcon from \"../../images/marker--cooks.svg\";\nimport EnfieldIcon from \"../../images/marker--enfield.svg\";\nimport NSWPortsIcon from \"../../images/marker--nsw-ports.svg\";\n\nconst BUTTONS = [\n  { id: \"PB\", icon: BotanyIcon },\n  { id: \"PK\", icon: KemblaIcon },\n  {\n    id: \"CR\",\n    icon: CooksIcon,\n  },\n  { id: \"EN\", icon: EnfieldIcon },\n  {\n    id: \"ALL\",\n    icon: NSWPortsIcon,\n  },\n];\n\nexport default function LocationButtons() {\n  const setState = useSetState();\n\n  const handleClick = (location) => {\n    setState((prev) => ({ ...prev, siderLevel: 2, viewing: location }));\n  };\n\n  return (\n    <StyledContainer>\n      <StyledContent>\n        {BUTTONS.map((button) => (\n          <button key={button.id} onClick={() => handleClick(button.id)}>\n            <img src={button.icon} alt='marker-symbol' />\n          </button>\n        ))}\n      </StyledContent>\n    </StyledContainer>\n  );\n}\n\nconst StyledContainer = styled.div`\n  margin: 20px 0;\n  font-family: \"Roboto\";\n`;\n\nconst StyledContent = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n\n  @media (max-width: 500px) {\n    justify-content: center;\n  }\n\n  button {\n    display: flex;\n    align-items: center;\n    flex: 0 0 32%;\n    margin: 15px;\n    padding: 0;\n    box-shadow: none;\n    border: none;\n    background: none;\n    cursor: pointer;\n    height: 125px;\n\n    &:hover {\n      color: #68a0b9;\n    }\n\n    &:focus {\n      border: none;\n      outline: none;\n    }\n\n    @media (max-width: 500px) {\n      flex: 0 0 48%;\n      margin: 10px 0;\n      justify-content: center;\n    }\n\n    img {\n      width: 125px;\n      height: auto;\n      max-height: 100%;\n\n      @media (max-width: 500px) {\n        width: 140px;\n      }\n\n      @media (max-width: 430px) {\n        max-width: 90%;\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { AiOutlineLine } from \"react-icons/ai\";\n\nimport BuildingIcon from \"../images/marker--building.svg\";\nimport BerthIcon from \"../images/marker--berth.svg\";\nimport SeaportIcon from \"../images/marker--seaport.svg\";\nimport SeaportBlueIcon from \"../images/marker--seaport--blue.svg\";\nimport IntermodalTerminalIcon from \"../images/marker--imt.svg\";\nimport IntermodalTerminalBlueIcon from \"../images/marker--imt--blue.svg\";\nimport CarparkIcon from \"../images/marker--carpark.svg\";\n\nconst ICON_SIZE = \"30px\";\n\nconst ALL = {\n  nswPortsSeaports: {\n    label: \"NSW Ports Seaports\",\n    iconUrl: SeaportBlueIcon,\n    key: \"nswPortsSeaports\",\n  },\n  nswPortsIntermodalTerminals: {\n    label: \"NSW Ports Intermodal Terminals\",\n    iconUrl: IntermodalTerminalBlueIcon,\n    key: \"nswPortsIntermodalTerminals\",\n  },\n  /* seaports: {\n    label: \"Seaports\",\n    iconUrl: SeaportIcon,\n    key: \"seaports\",\n  }, */\n  intermodalTerminals: {\n    label: \"Intermodal Terminals\",\n    iconUrl: IntermodalTerminalIcon,\n    key: \"intermodalTerminals\",\n  },\n  keyRail: {\n    label: \"Key National Rail\",\n    icon: <AiOutlineLine size={ICON_SIZE} color='#FF1493' />,\n    key: \"keyRail\",\n  },\n  keyRoads: {\n    label: \"Key National Roads\",\n    icon: <AiOutlineLine size={ICON_SIZE} color='#002673' />,\n    key: \"keyRoads\",\n  },\n  secondaryRoads: {\n    label: \"Secondary Roads\",\n    icon: <AiOutlineLine size={ICON_SIZE} color='#004de8' />,\n    key: \"secondaryRoads\",\n  },\n  localGov: {\n    label: \"Local Government\",\n    icon: <AiOutlineLine size={ICON_SIZE} color='#aaff00' />,\n    key: \"localGov\",\n  },\n  tenancyLeaseArea: {\n    label: \"Tenancy Lease Area\",\n    icon: <AiOutlineLine size={ICON_SIZE} color='#e69800' />,\n    key: \"tenancyLeaseAreas\",\n  },\n  tenancyUnits: {\n    label: \"NSW Ports Lease Boundary\",\n    icon: <AiOutlineLine size={ICON_SIZE} color='#3333cc' />,\n    key: \"nswPortsLeaseArea\",\n  },\n  buildings: {\n    label: \"Buildings\",\n    iconUrl: BuildingIcon,\n    key: \"buildings\",\n  },\n  railNetwork: {\n    label: \"NSW Ports Rail Network\",\n    portBotanyLabel: \"NSW Ports On-dock Rail\",\n    icon: <AiOutlineLine size={ICON_SIZE} color='#8B0000' />,\n    key: \"railNetwork\",\n  },\n  roadNetwork: {\n    label: \"NSW Ports Road Network\",\n    icon: <AiOutlineLine size={ICON_SIZE} color='#a800e6' />,\n    key: \"roadNetwork\",\n  },\n  carparks: {\n    label: \"Parking\",\n    iconUrl: CarparkIcon,\n    key: \"carparks\",\n  },\n};\n\nexport const ALL_SWITCHES = [\n  ALL.nswPortsSeaports,\n  ALL.nswPortsIntermodalTerminals,\n  ALL.intermodalTerminals,\n  ALL.keyRail,\n  ALL.keyRoads,\n  ALL.secondaryRoads,\n];\n\nexport const PB_SWITCHES = [\n  {\n    label: \"Berths\",\n    iconUrl: BerthIcon,\n    key: \"pbBerths\",\n  },\n  ALL.buildings,\n  ALL.carparks,\n  ALL.tenancyUnits,\n  ALL.tenancyLeaseArea,\n  ALL.roadNetwork,\n  ALL.railNetwork,\n];\n\nexport const PK_SWITCHES = [\n  {\n    label: \"Berths\",\n    iconUrl: BerthIcon,\n    key: \"pkBerths\",\n  },\n  ALL.buildings,\n  ALL.carparks,\n  ALL.tenancyUnits,\n  ALL.tenancyLeaseArea,\n  ALL.roadNetwork,\n  ALL.railNetwork,\n];\n\nexport const CR_SWITCHES = [ALL.buildings, ALL.tenancyUnits, ALL.tenancyLeaseArea];\n\nexport const EN_SWITCHES = [\n  ALL.buildings,\n  ALL.carparks,\n  ALL.tenancyUnits,\n  ALL.tenancyLeaseArea,\n  ALL.roadNetwork,\n  ALL.railNetwork,\n];\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useForm } from \"react-hook-form\";\nimport Switch from \"react-switch\";\n\nimport { useTrackedState, useSetState } from \"../../store\";\n\nexport default function SwitchComp({ item, label }) {\n  const state = useTrackedState();\n  const setState = useSetState();\n  const { register } = useForm();\n\n  const handleToggle = (e, key) => {\n    setState((prev) => ({ ...prev, [key]: e }));\n  };\n\n  const { icon, iconUrl, key } = item;\n\n  return (\n    <StyledSwitch id={`switch-${key}`} name={`switch-${label}`} key={label}>\n      <label>\n        <span>\n          {icon ? icon : <img src={iconUrl} alt={key} />}\n          <p>{label}</p>\n        </span>\n        <Switch\n          ref={register}\n          onChange={(e) => handleToggle(e, key)}\n          checked={state[key]}\n          checkedIcon={false}\n          uncheckedIcon={false}\n          onColor='#68a0b9'\n          offColor='#A9A9A9'\n          height={24}\n          width={45}\n        />\n      </label>\n    </StyledSwitch>\n  );\n}\n\nconst StyledSwitch = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 13px 0;\n  width: 100%;\n\n  label {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    cursor: pointer;\n    align-items: center;\n  }\n\n  &:first-child {\n    margin-top: 0;\n  }\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  span {\n    display: flex;\n    align-items: center;\n\n    img,\n    svg {\n      height: 50px;\n      width: 50px;\n    }\n\n    p {\n      margin: 0 0 0 15px;\n      color: #000;\n      font-size: 18px;\n      font-weight: 500;\n      font-family: \"Roboto Condensed\";\n      border-bottom: 1px solid #fff;\n\n      &:hover {\n        color: #68a0b9;\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { clearActive, useSetState, useTrackedState } from \"../../store\";\n\nimport { ALL_SWITCHES, PB_SWITCHES, PK_SWITCHES, CR_SWITCHES, EN_SWITCHES } from \"../../data/toggles\";\n\nimport Switch from \"./Switch\";\n\nexport default function ActiveLayersForm() {\n  const state = useTrackedState();\n  const setState = useSetState();\n\n  const handleReset = () => {\n    // reset to layers to initial state (all false)\n    setState((prev) => ({\n      ...prev,\n      viewing: state.viewing,\n      siderLevel: state.siderLevel,\n      ...clearActive,\n    }));\n  };\n\n  const handleToggles = () => {\n    switch (state.viewing) {\n      case \"PB\":\n        return PB_SWITCHES;\n      case \"PK\":\n        return PK_SWITCHES;\n      case \"CR\":\n        return CR_SWITCHES;\n      case \"EN\":\n        return EN_SWITCHES;\n      case \"ALL\":\n      default:\n        return ALL_SWITCHES;\n    }\n  };\n\n  const togglesArr = handleToggles();\n\n  return (\n    <StyledWrapper>\n      <StyledForm>\n        <MenuBtnsWrapper>\n          <button\n            onClick={() => {\n              setState((prev) => ({ ...prev, siderLevel: 1 }));\n            }}\n          >\n            Back to all views\n          </button>\n          <button type='reset' onClick={() => handleReset()}>\n            Clear all selections\n          </button>\n        </MenuBtnsWrapper>\n        <TogglesWrapper>\n          {togglesArr.map((v) => {\n            // display a different label for PB railNetwork\n            if (v.key === \"railNetwork\" && (state.viewing === \"PB\" || state.viewing === \"PK\")) {\n              return <Switch key={v.label} item={v} label={v.portBotanyLabel} />;\n            } else {\n              return <Switch key={v.label} item={v} label={v.label} />;\n            }\n          })}\n        </TogglesWrapper>\n      </StyledForm>\n    </StyledWrapper>\n  );\n}\n\nconst StyledWrapper = styled.div`\n  margin: 0 0 20px 0;\n  font-family: \"Roboto\";\n\n  .heading-wrapper {\n    display: flex;\n    justify-content: center;\n\n    img {\n      max-width: 120px;\n    }\n  }\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-top: 0;\n`;\n\nconst MenuBtnsWrapper = styled.div`\n  margin: 0;\n  display: flex;\n  justify-content: flex-end;\n  padding: 30px 0;\n  font-family: \"Roboto Condensed\";\n\n  button {\n    background: none;\n    border: none;\n    box-shadow: none;\n    cursor: pointer;\n    margin: 0 5px;\n    font-size: 15px;\n\n    &:hover {\n      color: #68a0b9;\n    }\n\n    svg {\n      margin-right: 5px;\n    }\n  }\n`;\n\nconst TogglesWrapper = styled.div`\n  height: 100%;\n  padding-right: 10px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { AiOutlineArrowLeft, AiOutlineArrowRight, AiOutlineClose } from \"react-icons/ai\";\n\nimport { useTrackedState } from \"../../store\";\n\nimport LocationButtons from \"./LocationButtons\";\nimport ActiveLayers from \"./ActiveLayers\";\n\nconst getWindowDimensions = () => {\n  return {\n    width: window.innerWidth,\n    height: window.innerHeight,\n  };\n};\n\nexport default function Sidebar() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  const [visible, setVisible] = useState(windowDimensions.width > 900 ? true : false);\n  // to adjust icon color when hovered\n  const [btnHovered, setBtnHovered] = useState(false);\n  const [crossHovered, setCrossHovered] = useState(false);\n  const state = useTrackedState();\n\n  /* console.log(\"windowDimensions\", windowDimensions);\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); */\n\n  return (\n    <div>\n      <StyledToggle\n        visible={visible}\n        onClick={() => {\n          setBtnHovered(!btnHovered);\n          setVisible(!visible);\n        }}\n        onMouseEnter={() => setBtnHovered(true)}\n        onMouseLeave={() => setBtnHovered(false)}\n      >\n        {visible ? (\n          <AiOutlineArrowRight size='20px' color={btnHovered ? \"#002650\" : \"#68a0b9\"} />\n        ) : (\n          <AiOutlineArrowLeft size='20px' color={btnHovered ? \"#002650\" : \"#68a0b9\"} />\n        )}\n      </StyledToggle>\n      <StyledContent visible={visible}>\n        <StyledHeader viewing={state.viewing}>\n          <div className='icon-wrapper'></div>\n        </StyledHeader>\n        <ButtonsWrapper>{state.siderLevel === 1 ? <LocationButtons /> : <ActiveLayers />}</ButtonsWrapper>\n      </StyledContent>\n    </div>\n  );\n}\n\nconst StyledToggle = styled.button`\n  z-index: 3;\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  right: ${(props) => (props.visible ? \"350px\" : \"0\")};\n  top: 4%;\n  height: 80px;\n  width: 40px;\n  border: none;\n  cursor: pointer;\n  background: #002650;\n  border-top-left-radius: 10px;\n  border-bottom-left-radius: 10px;\n\n  &:hover {\n    background: #f5a91c;\n  }\n`;\n\nconst StyledContent = styled.div`\n  background: #fff;\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  width: 350px;\n  z-index: 2;\n  right: 0px;\n  top: 0px;\n  border-radius: 10px;\n  visibility: ${(props) => (props.visible ? \"visible\" : \"hidden\")};\n  opacity: ${(props) => (props.visible ? \"1\" : \"0\")};\n  transition: visibility 0.5s, opacity 0.1s linear;\n`;\n\nconst handleBannerImage = (viewing) => {\n  switch (viewing) {\n    case \"AUS\":\n    case \"ALL\":\n      return \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/header--nsw-ports.jpg\";\n    case \"PB\":\n      return \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/header--botany.jpg\";\n    case \"PK\":\n      return \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/header--kembla.jpg\";\n    case \"EN\":\n      return \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/header--enfield.jpg\";\n    case \"CR\":\n      return \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/header--cooks.jpg\";\n    default:\n      break;\n  }\n};\n\nconst handleBannerIcon = (viewing) => {\n  switch (viewing) {\n    case \"AUS\":\n    case \"ALL\":\n      return \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/marker--nsw-ports.svg\";\n    case \"PB\":\n      return \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/marker--botany.svg\";\n    case \"PK\":\n      return \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/marker--kembla.svg\";\n    case \"EN\":\n      return \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/marker--enfield.svg\";\n    case \"CR\":\n      return \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/marker--cooks.svg\";\n    default:\n      break;\n  }\n};\n\nconst StyledHeader = styled.div`\n  height: 125px;\n  position: relative;\n  background: url(${(props) => handleBannerImage(props.viewing)});\n  background-size: cover;\n  background-repeat: no-repeat;\n\n  .icon-wrapper {\n    background: url(${(props) => handleBannerIcon(props.viewing)});\n    position: absolute;\n    z-index: 3;\n    height: 110px;\n    width: 110px;\n    background-repeat: no-repeat;\n    background-position: center center;\n    left: 33%;\n    top: 7%;\n  }\n`;\n\nconst ButtonsWrapper = styled.div`\n  padding: 0 20px;\n\n  @media (max-width: 500px) {\n    flex: 1;\n  }\n`;\n","const symbolSettings = {\n  type: \"picture-marker\",\n  width: \"80px\",\n  height: \"80px\",\n};\n\nexport const allLocationsLayer = {\n  url:\n    \"https://raw.githubusercontent.com/darcydev/StaticMedia/master/api/Ports/allLocations/index.geojson\",\n  objectIdField: \"ObjectID\",\n  renderer: {\n    type: \"simple\",\n    symbol: {\n      ...symbolSettings,\n      url:\n        \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/marker--nsw-ports.svg\",\n    },\n  },\n};\n\nexport const botanyLayer = {\n  url:\n    \"https://raw.githubusercontent.com/darcydev/StaticMedia/master/api/Ports/allLocations/botany.geojson\",\n  objectIdField: \"ObjectID\",\n  renderer: {\n    type: \"simple\",\n    symbol: {\n      ...symbolSettings,\n      url:\n        \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/marker--botany.svg\",\n    },\n  },\n};\n\nexport const kemblaLayer = {\n  url:\n    \"https://raw.githubusercontent.com/darcydev/StaticMedia/master/api/Ports/allLocations/kembla.geojson\",\n  objectIdField: \"ObjectID\",\n  renderer: {\n    type: \"simple\",\n    symbol: {\n      ...symbolSettings,\n      url:\n        \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/marker--kembla.svg\",\n    },\n  },\n};\n\nexport const cooksLayer = {\n  url:\n    \"https://raw.githubusercontent.com/darcydev/StaticMedia/master/api/Ports/allLocations/cooks.geojson\",\n  objectIdField: \"ObjectID\",\n  renderer: {\n    type: \"simple\",\n    symbol: {\n      ...symbolSettings,\n      url:\n        \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/marker--cooks.svg\",\n    },\n  },\n};\n\nexport const enfieldLayer = {\n  url:\n    \"https://raw.githubusercontent.com/darcydev/StaticMedia/master/api/Ports/allLocations/enfield.geojson\",\n  objectIdField: \"ObjectID\",\n  renderer: {\n    type: \"simple\",\n    symbol: {\n      ...symbolSettings,\n      url:\n        \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/marker--enfield.svg\",\n    },\n  },\n};\n","export const clusterConfig = {\n  type: \"cluster\",\n  // A cluster radius of 100px indicates an area comprising screen space 100px\n  // in length from the center of the cluster\n  clusterRadius: \"100px\",\n  clusterMinSize: \"24px\",\n  clusterMaxSize: \"60px\",\n  labelingInfo: [\n    {\n      deconflictionStrategy: \"none\",\n      labelExpressionInfo: {\n        expression: \"Text($feature.cluster_count, '#,###')\",\n      },\n      symbol: {\n        type: \"text\",\n        color: \"#004a5d\",\n        font: {\n          weight: \"bold\",\n          family: \"Noto Sans\",\n          size: \"12px\",\n        },\n      },\n      labelPlacement: \"center-center\",\n    },\n  ],\n};\n","import { clusterConfig } from \"../../utils/popup/cluster\";\n\nconst seaportsLayer = {\n  url:\n    \"https://raw.githubusercontent.com/darcydev/StaticMedia/master/api/Ports/keyFreightRoutes/majorSeaports.geojson\",\n  objectIdField: \"ObjectID\",\n  popupTemplate: {\n    title: \"{name}\",\n  },\n  featureReduction: clusterConfig,\n  renderer: {\n    type: \"simple\",\n    symbol: {\n      type: \"picture-marker\",\n      url:\n        \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/marker--seaport.svg\",\n      width: \"50px\",\n      height: \"50px\",\n    },\n  },\n};\n\nexport default seaportsLayer;\n","const keyRoadsLayer = {\n  url: \"https://raw.githubusercontent.com/darcydev/StaticMedia/master/api/Ports/keyFreightRoutes/keyRoad.geojson\",\n  objectIdField: \"ObjectID\",\n  popupTemplate: {\n    title: \"{Name}\",\n  },\n  renderer: {\n    type: \"simple\",\n    symbol: {\n      type: \"simple-fill\",\n      color: [0, 38, 115, 1],\n      style: \"simple\",\n      outline: {\n        color: [0, 38, 115, 1],\n        width: \"1px\",\n      },\n    },\n  },\n};\n\nexport default keyRoadsLayer;\n","export const keyRailLayer = {\n  url: \"https://raw.githubusercontent.com/darcydev/StaticMedia/master/api/Ports/keyFreightRoutes/keyRail.geojson\",\n  objectIdField: \"ObjectID\",\n  popupTemplate: {\n    title: \"{Name}\",\n  },\n  renderer: {\n    type: \"simple\",\n    symbol: {\n      type: \"simple-fill\",\n      color: [0, 38, 115, 1],\n      style: \"simple\",\n      outline: {\n        color: [0, 38, 115, 1],\n        width: \"1px\",\n      },\n    },\n  },\n};\n","const intermodalTerminalsLayer = {\n  url:\n    \"https://raw.githubusercontent.com/darcydev/StaticMedia/master/api/Ports/keyFreightRoutes/intermodalTerminals.geojson\",\n  objectIdField: \"ObjectID\",\n  popupTemplate: {\n    title: \"{Name}\",\n  },\n  renderer: {\n    type: \"simple\",\n    symbol: {\n      type: \"picture-marker\",\n      url:\n        \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/marker--imt.svg\",\n      width: \"50px\",\n      height: \"50px\",\n    },\n  },\n};\n\nexport default intermodalTerminalsLayer;\n","const secondaryRoadsLayer = {\n  url: \"https://raw.githubusercontent.com/darcydev/StaticMedia/master/api/Ports/keyFreightRoutes/secondaryRoad.geojson\",\n  objectIdField: \"ObjectID\",\n  popupTemplate: {\n    title: \"{Name}\",\n  },\n  renderer: {\n    type: \"simple\",\n    symbol: {\n      type: \"simple-fill\",\n      color: [0, 77, 232, 1],\n      style: \"simple\",\n      outline: {\n        color: [0, 77, 232, 1],\n        width: \"1px\",\n      },\n    },\n  },\n};\n\nexport default secondaryRoadsLayer;\n","/**\n * A function to accept a marker feature and iterate over the object and return an\n * html string of all the non-null metadata values in that object\n * @param {object} feature\n * @returns {string} html table\n */\nexport const handlePopupContent = (feature) => {\n  const dataObj = feature.graphic.attributes;\n\n  let htmlString = \"\";\n\n  // iterate over the metadata object and add all non-null values to as a new table in a row\n  Object.keys(dataObj).forEach((key) => {\n    const value = dataObj[key];\n\n    // we don't need these keys in the popup\n    if (key === \"Angle\" || key === \"ObjectID\" || key === \"TextString\") {\n      // ! do nothing (not a placeholder; really do nothing!)\n    } else {\n      // the returned string only contains non-null values\n      if (value !== null) {\n        htmlString = htmlString + `<tr><td>${key}</td><td>${value}</td></tr>`;\n      }\n    }\n  });\n\n  return `<table style=\"width:100%\" class=\"esri-widget__table\">${htmlString}</table>`;\n};\n","import { clusterConfig } from \"../../utils/popup/cluster\";\nimport { handlePopupContent } from \"../../utils/popup/content-fields\";\n\nconst PB_berthLayer = {\n  title: \"Berths\",\n  url: \"https://raw.githubusercontent.com/darcydev/StaticMedia/master/api/Ports/gatenumbers/json/PB_BERTH.geojson\",\n  outFields: [\"*\"],\n  objectIdField: \"ObjectID\",\n  popupTemplate: {\n    title: \"{TextString}\",\n    /* outfields: [\"*\"], */\n    content: handlePopupContent,\n  },\n  featureReduction: clusterConfig,\n  renderer: {\n    type: \"simple\",\n    symbol: {\n      type: \"picture-marker\",\n      url: \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/marker--berth.svg\",\n      width: \"50px\",\n      height: \"50px\",\n    },\n  },\n};\n\nexport default PB_berthLayer;\n","import { clusterConfig } from \"../../utils/popup/cluster\";\nimport { handlePopupContent } from \"../../utils/popup/content-fields\";\n\nconst PK_berthsLayer = {\n  url: \"https://raw.githubusercontent.com/darcydev/StaticMedia/master/api/Ports/gatenumbers/json/PK_BERTH.geojson\",\n  outFields: [\"*\"],\n  objectIdField: \"ObjectID\",\n  featureReduction: clusterConfig,\n  renderer: {\n    type: \"simple\",\n    symbol: {\n      type: \"picture-marker\",\n      url: \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/marker--berth.svg\",\n      width: \"50px\",\n      height: \"50px\",\n    },\n  },\n  popupTemplate: {\n    title: \"Port Kembla {TextString}\",\n    outfields: [\"*\"],\n    content: handlePopupContent,\n  },\n};\n\nexport default PK_berthsLayer;\n","const tenancyLeaseAreasLayer = {\n  url:\n    \"https://raw.githubusercontent.com/darcydev/StaticMedia/master/api/Ports/tenancydata/json/TENANCY_LEASE_AREAS.geojson\",\n  objectIdField: \"ObjectID\",\n  popupTemplate: {\n    title: \"Tenancy Lease Area\",\n  },\n  renderer: {\n    type: \"simple\",\n    symbol: {\n      type: \"simple-fill\",\n      color: [230, 152, 0, 1],\n      style: \"solid\",\n      outline: {\n        color: [56, 45, 25, 1],\n        width: 1,\n      },\n    },\n  },\n};\n\nexport default tenancyLeaseAreasLayer;\n","const tenancyUnitsLayer = {\n  url:\n    \"https://raw.githubusercontent.com/darcydev/StaticMedia/master/api/Ports/leaseboundary/json/LEASEBOUNDARY.geojson\",\n  objectIdField: \"ObjectID\",\n  renderer: {\n    type: \"simple\",\n    symbol: {\n      type: \"simple-fill\",\n      color: [51, 51, 204, 0],\n      style: \"solid\",\n      outline: {\n        color: [51, 51, 204, 0.9],\n        width: 2,\n      },\n    },\n  },\n};\n\nexport default tenancyUnitsLayer;\n","import { clusterConfig } from \"../../utils/popup/cluster\";\n// import { handlePopupContent } from \"../../utils/popup/content-fields\";\n\nconst handlePopupContent = (feature) => {\n  const dataObj = feature.graphic.attributes;\n\n  let htmlString = \"\";\n\n  // iterate over the metadata object and add all non-null values to as a new table in a row\n  Object.keys(dataObj).forEach((key) => {\n    const value = dataObj[key];\n\n    // we don't need these keys in the popup\n    // the returned string only contains non-null values\n    if (value !== null && key !== \"Angle\" && key !== \"ObjectID\" && key !== \"TextString\" && key !== \"Asset Name\") {\n      htmlString = htmlString + `<tr><td>${key}</td><td>${value}</td></tr>`;\n    }\n  });\n\n  return `<table style=\"width:100%\" class=\"esri-widget__table\">${htmlString}</table>`;\n};\n\nconst buildingsLayer = {\n  url: \"https://raw.githubusercontent.com/darcydev/StaticMedia/master/api/Ports/assets/json/BUILDINGS.geojson\",\n  outFields: [\"*\"],\n  objectIdField: \"ObjectID\",\n  popupTemplate: {\n    title: \"{Asset Name}\",\n    outfields: [\"*\"],\n    content: handlePopupContent,\n  },\n  featureReduction: clusterConfig,\n  renderer: {\n    type: \"simple\",\n    symbol: {\n      type: \"picture-marker\",\n      url: \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/marker--building.svg\",\n      width: \"50px\",\n      height: \"50px\",\n    },\n  },\n};\n\nexport default buildingsLayer;\n","const railNetworkLayer = {\n  url: \"https://raw.githubusercontent.com/darcydev/StaticMedia/master/api/Ports/assets/json/RAILNETWORK.geojson\",\n  objectIdField: \"ObjectID\",\n  popupTemplate: {\n    title: \"Rail Network\",\n  },\n  renderer: {\n    type: \"simple\",\n    symbol: {\n      type: \"simple-fill\",\n      color: [139, 0, 0, 1],\n      style: \"simple\",\n      outline: {\n        color: [139, 0, 0, 1],\n        width: \"5px\",\n      },\n    },\n  },\n};\n\nexport default railNetworkLayer;\n","const roadNetworkLayer = {\n  url: \"https://raw.githubusercontent.com/darcydev/StaticMedia/master/api/Ports/assets/json/ROADNETWORK.geojson\",\n  objectIdField: \"ObjectID\",\n  popupTemplate: {\n    title: \"{NAME}\",\n  },\n  renderer: {\n    type: \"simple\",\n    symbol: {\n      type: \"simple-fill\",\n      color: [168, 0, 230, 1],\n      style: \"simple\",\n      outline: {\n        color: [168, 0, 230, 1],\n        width: \"5px\",\n      },\n    },\n  },\n};\n\nexport default roadNetworkLayer;\n","import { clusterConfig } from \"../../utils/popup/cluster\";\n\nexport const carparksLayer = {\n  url: \"https://raw.githubusercontent.com/darcydev/StaticMedia/master/api/Ports/PortsData/carparks/carparks.geojson\",\n  objectIdField: \"ObjectID\",\n  popupTemplate: {\n    title: \"{Asset name}\",\n  },\n  featureReduction: clusterConfig,\n  renderer: {\n    type: \"simple\",\n    symbol: {\n      type: \"picture-marker\",\n      url: \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/marker--carpark.svg\",\n      width: \"50px\",\n      height: \"50px\",\n    },\n  },\n};\n","export const PK_innerHabourLayer = {\n  url: \"https://raw.githubusercontent.com/darcydev/StaticMedia/master/api/Ports/PortsData/harbour/innerHarbour.geojson\",\n  objectIdField: \"ObjectID\",\n  popupTemplate: {\n    title: \"{Asset name}\",\n  },\n  renderer: {\n    type: \"simple\",\n    symbol: {\n      type: \"picture-marker\",\n      url: \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/marker--imt\t.svg\",\n      width: \"30px\",\n      height: \"30px\",\n    },\n  },\n};\n","export const PK_outerHabourLayer = {\n  url: \"https://raw.githubusercontent.com/darcydev/StaticMedia/master/api/Ports/PortsData/harbour/outerHarbour.geojson\",\n  objectIdField: \"ObjectID\",\n  popupTemplate: {\n    title: \"{Asset name}\",\n  },\n  renderer: {\n    type: \"simple\",\n    symbol: {\n      type: \"picture-marker\",\n      url: \"https://dev-nsw-ports.pantheonsite.io/themes/nswports/js/src/images/marker--imt\t.svg\",\n      width: \"30px\",\n      height: \"30px\",\n    },\n  },\n};\n","export const viewports = {\n  ALL: {\n    zoom: 10,\n    center: [151.020546, -34.183531],\n  },\n  PB: {\n    zoom: 15,\n    center: [151.215439, -33.972157],\n  },\n  PK: { zoom: 14, center: [150.899047, -34.471952] },\n  CR: { zoom: 15, center: [151.173395, -33.918453] },\n  EN: { zoom: 15, center: [151.071919, -33.894389] },\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { loadModules } from \"esri-loader\";\n\nimport { useTrackedState, useSetState } from \"../store\";\n\n// ##### IMPORT ALL INDIVIDUAL LAYER SETTINGS\nimport { botanyLayer, kemblaLayer, cooksLayer, enfieldLayer } from \"../data/PortsData/allLocations\";\nimport seaportsLayer from \"../data/PublicData/seaports\";\nimport keyRoadsLayer from \"../data/PublicData/keyRoads\";\nimport { keyRailLayer } from \"../data/PublicData/keyRail\";\nimport intermodalTerminalsLayer from \"../data/PublicData/intermodalTerminals\";\nimport secondaryRoadsLayer from \"../data/PublicData/secondaryRoads\";\nimport PB_berthLayer from \"../data/PortsData/PB_berths\";\nimport PK_berthsLayer from \"../data/PortsData/PK_berths\";\nimport tenancyLeaseAreasLayer from \"../data/PortsData/tenancyLeaseAreas\";\nimport tenancyUnitsLayer from \"../data/PortsData/tenancyUnits\";\nimport buildingsLayer from \"../data/PortsData/buildings\";\nimport railNetworkLayer from \"../data/PortsData/railNetwork\";\nimport roadNetworkLayer from \"../data/PortsData/roadNetwork\";\nimport { carparksLayer } from \"../data/PortsData/carparks\";\nimport { PK_innerHabourLayer } from \"../data/PortsData/PK_innerHarbour\";\nimport { PK_outerHabourLayer } from \"../data/PortsData/PK_outerHarbour\";\n\nimport { viewports } from \"../data/viewports\";\n\nexport default function Map() {\n  const mapRef = useRef();\n  const state = useTrackedState();\n  const setState = useSetState();\n\n  useEffect(() => {\n    // lazy load the required ArcGIS API\n    loadModules(\n      [\n        \"esri/config\",\n        \"esri/Map\",\n        \"esri/views/MapView\",\n        \"esri/layers/GeoJSONLayer\",\n        \"esri/widgets/BasemapToggle\",\n        \"esri/layers/FeatureLayer\",\n      ],\n      { css: true }\n    ).then(([esriConfig, ArcGISMap, MapView, GeoJSONLayer, BasemapToggle, FeatureLayer]) => {\n      const map = new ArcGISMap({\n        basemap: state.basemap,\n      });\n\n      // load the map view at the ref's DOM node\n      const view = new MapView({\n        container: mapRef.current,\n        map,\n        center: viewports[state.viewing].center,\n        zoom: viewports[state.viewing].zoom,\n        popup: {\n          collapseEnabled: false,\n          dockEnabled: false,\n          defaultPopupTemplateEnabled: false,\n        },\n        highlightOptions: {\n          color: [0, 38, 80, 1],\n          haloOpacity: 0.9,\n          fillOpacity: 0.2,\n        },\n        navigation: {\n          mouseWheelZoomEnabled: false,\n        },\n      });\n\n      const basemapToggle = new BasemapToggle({\n        view,\n        nextBasemap: state.basemap === \"gray\" ? \"satellite\" : \"gray\",\n      });\n\n      // add event listener to map toggle to update state\n      basemapToggle.on(\"toggle\", () => {\n        setState((prev) => ({\n          ...prev,\n          basemap: state.basemap === \"gray\" ? \"satellite\" : \"gray\",\n        }));\n      });\n\n      view.ui.add(basemapToggle, {\n        position: \"top-left\",\n      });\n\n      // ! Layers are added in the appropriate order: polygons, lines, points\n\n      // Points\n      // if they're viewing all locations, show the locations marker\n      /* if (state.viewing === \"ALL\") {\n        map.add(new GeoJSONLayer(botanyLayer));\n        map.add(new GeoJSONLayer(kemblaLayer));\n        map.add(new GeoJSONLayer(cooksLayer));\n        map.add(new GeoJSONLayer(enfieldLayer));\n\t\t\t} */\n\n      if (state.viewing === \"ALL\") {\n        if (state.nswPortsSeaports) {\n          map.add(new GeoJSONLayer(botanyLayer), 0);\n          map.add(new GeoJSONLayer(kemblaLayer), 0);\n        }\n        if (state.nswPortsIntermodalTerminals) {\n          map.add(new GeoJSONLayer(cooksLayer), 0);\n          map.add(new GeoJSONLayer(enfieldLayer), 0);\n        }\n      }\n      if (state.pbBerths) map.add(new GeoJSONLayer(PB_berthLayer), 0);\n      if (state.pkBerths) map.add(new GeoJSONLayer(PK_berthsLayer), 0);\n      if (state.buildings) map.add(new GeoJSONLayer(buildingsLayer), 0);\n      if (state.carparks) map.add(new GeoJSONLayer(carparksLayer), 0);\n      if (state.seaports) map.add(new GeoJSONLayer(seaportsLayer), 0);\n      if (state.intermodalTerminals) map.add(new GeoJSONLayer(intermodalTerminalsLayer), 0);\n\n      // Lines\n      if (state.railNetwork) map.add(new GeoJSONLayer(railNetworkLayer), 0);\n      if (state.roadNetwork) map.add(new GeoJSONLayer(roadNetworkLayer), 0);\n      if (state.keyRail) map.add(new GeoJSONLayer(keyRailLayer), 0);\n      if (state.keyRoads) map.add(new GeoJSONLayer(keyRoadsLayer), 0);\n      if (state.secondaryRoads) map.add(new GeoJSONLayer(secondaryRoadsLayer), 0);\n\n      // Polygons\n      if (state.tenancyLeaseAreas) map.add(new GeoJSONLayer(tenancyLeaseAreasLayer), 0);\n      if (state.nswPortsLeaseArea) map.add(new GeoJSONLayer(tenancyUnitsLayer), 0);\n\n      if (state.viewing !== \"ALL\") {\n        map.add(new GeoJSONLayer(PK_innerHabourLayer), 0);\n        map.add(new GeoJSONLayer(PK_outerHabourLayer), 0);\n      }\n\n      // destroy the map view\n      return () => {\n        if (view) view.container = null;\n      };\n    });\n  });\n\n  return <div className='map-wrapper' ref={mapRef}></div>;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\n\nimport { Provider } from \"./store\";\n\nimport Sidebar from \"./components/Sider\";\nimport Map from \"./components/Map\";\n\nimport \"./index.css\";\n\nconst App = () => (\n  <Provider>\n    <StyledWrapper>\n      <Sidebar />\n      <Map />\n    </StyledWrapper>\n  </Provider>\n);\n\nconst StyledWrapper = styled.div`\n  position: relative;\n`;\n\nwindow.onload = () => {\n  ReactDOM.render(<App />, document.getElementById(\"react-interactive-map\"));\n};\n"],"sourceRoot":""}